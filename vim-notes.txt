these are my vim notes


#Help Docs
To follow links within the :help documentation, use 'ctrl + ]' to follow the link and 'ctrl + t' to back out
The "holy grail" can be found by searching for it with ':help holy-grail'





#Exiting
----------------------------------------------------
save and close                  = ZZ
discard and close               = ZQ
save and close WINDOW           = <leader> +b +D 





#Navigating page
----------------------------------------------------
jump backwards end of word      = ge
move cursor to matching char    = %

jump to char occurence          = f,F,t,T
repeat previous "jump" movement = ; ,

center cursor on screen         = zz

LazyVim "flash" plugin is "vimium" like navigation 
  -can also quickly select "tree-sitter" trees (like code paragraphs)                          
  -and you can also integrate it with your / and ? searches by C-s to toggle it on                              
  -also when you f,F,t,or T you can now just hit those characters again to continue movement, fuck , and ;      

g; and g, navigate to latest changes - useful after you jumped with search: / or ?






#Editing
----------------------------------------------------
undo                            = u
re-do                           = ctrl +r

replace char until ESC pressed  = R
rewrite line                    = cc

repeat last command             = .

shift text                      = >>

delete blank lines              =  g/^$/d

replace/substitute pattern      = :%s/old/new/g
  what is the % sign?
  shorthand for ':1,$', which = "start from line 1 and go to the last line in the buffer"

  :%s/\v[0-9](.[0-9])+/\r\t\0

  \v        = very magic regex
  ()        = define a grouping to be referenced later
  \r        = carriage return
  \n        = can't use this
  \t        = horizontal tab
  \0        = reference from ()

  so the above line says "on each line, find the IP, and move to a newline with a tab, and paste the IP on said line"


search and replace plugin       = <leader> +s +r

"surround" via the "mini.surround" plugin - it's not the OG tpope plugin 
  -it doesn't use "ysiw", it uses "gsaiw"
  -prefer this to tpope for consisency

start macro                     = qa
stop macro                      = q
play macro                      = @a 
repeat last macro               = @@
repeat last macro 20 time       = 20@a

range of numbers                = :put=range(0,10,2)   from 0,10 going by 2's
 

#mulicursor mode and COLUMNS
----------------------------------------------------
visual block                    =  ctrl +v
move block                      =  j,k to go up and down
insert mode                     =  I
apply to all line               =  esc

column auto-format              =  :%!column -t            https://stackoverflow.com/questions/1229900/reformat-in-vim-for-a-nice-column-layout
align columns                   =  ctrl+v to select and << to move it left/right - may need to select blank space so you can move your shit

delete blank lines              =  g/^$/d

change matching lines at cursor =  :%s/\v[0-9](.[0-9])+/\r\t\0





#visual Mode
----------------------------------------------------
start visual mode               = v 
start linewise mode             = V 
start blockwise mode            = ctrl +v
shift text                      = >





#managing WINDOWS
----------------------------------------------------
vertical split                  = <leader> + "|"
                                = ctrl + ws

hori split                      = <leader> + "-"
                                = ctrl + wv





#managing BUFFERS
----------------------------------------------------
switch buffers                  = <leader> +`  
                                = :b(n)ext
                                = :b(p)revious
  open buffer menu              = <leader> +f +b (find buffer)
                                = <leader> +b +e (buffer explorer)
  BOOM                          = <S-h><S-h>

close buffer                   
  aka delete buffer
                                = <leader> +b +d
  close buffer AND window       = <leader> +b +D
                                = :b(d)elete

open new buffer
  must be named                 = :e filename
                                = <leader> +f +n





#managing and searching FILES
----------------------------------------------------
open file-tree                  = <leader> +e 
  -open file in buffer          = <CR>

nerdTree HELP                   = ? (must have tree open)
  add file                      = a 
  delete file                   = d
  toggle hidden                 = H

search files in current dir     = <leader> +f +f

find files 

telescope and fzf - HELLA powerful for many things:
  -jumplist
  -top of mind when working in a directory (like when you're working on configs)
    <leader> + space
    <leader> + ,
    <leader> + /
    <leader> + : can telescope your command history






#path
----------------------------------------------------

you can add specific directories to your nvim path so that you can fuzzy search for them
https://www.reddit.com/r/vim/comments/fg5wce/can_you_make_wildmenu_search_hidden_files_and/

learn more with ':help path'
https://medium.com/usevim/vim-101-jumping-between-files-f9e16f79f63a

view path with ':set path?' 
add to path with ':set path+=/home/jimmy/mypath'
can use * and ** and ? wildcards but be careful watch you wish for cuz it can get slow
use ':help 'path'' to learn more about how path works, it's use of env variable $expansion and wildcards


path=.,~/.config/nvim/**,/mnt/c/Users/Jimmy/Nextcloud/Documents/,~/.config/,~/
this path was added to autocmds.lua file with command vim.cmd([set path ...])


